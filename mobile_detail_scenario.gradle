apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'


sourceCompatibility = 1.7
targetCompatibility = 1.7
version = '1.0'

compileJava.options.encoding = 'GBK'  

compileTestJava.options.encoding = 'GBK' 

configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

buildscript {
    repositories {
    	 if (System.getProperty('BUILD_ENV', 'internal') != 'external') {
        maven {
            url 'http://172.17.0.59:8081/nexus/content/groups/public'
        }
        }
        
        maven {	url "http://dev.mapfish.org/maven/repository" }
		maven { url "http://repo.ghost4j.org/maven2/releases" }
		maven { url 'http://repo.spring.io/snapshot' }
		maven { url 'http://repo.spring.io/milestone' }
		maven {url 'http://repository.springsource.com/maven/bundles/external'}
        mavenCentral()
        
        dependencies {
        classpath "org.flywaydb:flyway-gradle-plugin:3.0"
        classpath "net.saliman:gradle-cobertura-plugin:2.2.2"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:0.5.0.M5"
        classpath "javax.media.jai:com.springsource.javax.media.jai.core:1.1.3"
        classpath fileTree('./lib')
    }
    }

}
ext {
        jerseyVersion = '2.9'
        springVersion = '3.2.3.RELEASE'
        springSecurityVersion = '3.1.4.RELEASE'
        slf4jVersion = '1.7.5'
        log4jVersion = '1.2.17'
        jettyVersion = '8.1.14.v20131031'
        jasrsVersion = '2.0'
        junitVersion = '4.12'
        mockitoVersion = '1.9.5'
        jacksonVersion = '1.9.13'
        myBatisVersion = '3.2.2'
        myBatisSpringVersion = '1.2.1'
        jodaVersion = '2.2'

        profile = System.getProperty("env", "dev")
        println "[current profile]:" + profile
    }

 repositories {
        if (System.getProperty('BUILD_ENV', 'external') != 'external') {
            maven {
                url 'http://172.17.0.59:23456/nexus/content/groups/public'
            }
        }
        mavenCentral()
//        maven {
//            url 'http://maven.oschina.net/content/groups/public/'
//        }
        maven {
            url 'http://oss.sonatype.org/content/repositories/github-releases/'
        }
        maven {
            url 'http://clojars.org/repo'
        }
        maven {
        	url 'http://repository.springsource.com/maven/bundles/external'
        }
    }

dependencies {
    compile group: 'info.cukes', name: 'cucumber-picocontainer', version: '1.1.5'
    compile group: 'info.cukes', name: 'cucumber-junit', version: '1.2.5'
    compile group: 'org.json', name: 'json', version: '20090211'
    compile group: 'org.apache.httpcomponents',name:'httpcore',version:'4.0-alpha5'
    compile group: 'org.apache.httpcomponents',name:'httpclient',version:'4.0.3'
    compile 'info.cukes:cucumber-java:1.1.5'
    compile 'info.cukes:cucumber-core:1.1.5' 
    compile 'com.google.guava:guava:15.0'
    compile 'net.sourceforge.jexcelapi:jxl:2.6.12'
    compile 'org.apache.commons:commons-lang3:3.0'
    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'javax.mail:mail:1.4.7'
    compile 'javax.media.jai:com.springsource.javax.media.jai.core:1.1.3'
    compile 'com.microsoft:sqljdbc4:3.0'
    compile group: 'net.sf.json-lib', name: 'json-lib', version: '2.4', classifier: 'jdk15'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    
    runtime fileTree('../lib')
    
    
   compile "log4j:log4j:$log4jVersion"
        compile "org.slf4j:slf4j-api:$slf4jVersion"
        compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
        compile "org.springframework:spring-core:$springVersion"
        compile "org.springframework:spring-expression:$springVersion"
        compile "org.springframework:spring-web:$springVersion"
        compile "org.springframework:spring-beans:$springVersion"
        compile "org.springframework:spring-context:$springVersion"
        compile "org.springframework:spring-jdbc:$springVersion"
        compile "org.springframework:spring-orm:$springVersion"
        compile "org.springframework:spring-aop:$springVersion"
        compile "org.springframework:spring-tx:$springVersion"
        compile "org.springframework:spring-context-support:$springVersion"

        compile "joda-time:joda-time:$jodaVersion"

        compile 'javax.servlet:javax.servlet-api:3.0.1'

        compile 'javax.servlet:jstl:1.2'
        compile 'org.jyaml:jyaml:1.3'
}

sourceSets {
    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/resources'
        }

    }
}

task integrationTest(type: Test) {
	include '**/run/QA_Mobile_Detail_scenario.class'
    doFirst {
//        apiDatabaseCleanAndMigration.execute()
    }
    doLast {
    }
}

test {
    exclude "**/**"
}


tasks.withType(JavaCompile) {  
    options.encoding = "GBK"  
}

//task copyJars(type: Copy) {
  //from configurations.runtime
  //into 'lib'
//}






